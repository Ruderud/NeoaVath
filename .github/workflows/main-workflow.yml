name: Main Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  affected:
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.affected.outputs.affected }}
      affected-apps: ${{ steps.affected.outputs.affected-apps }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Get affected projects
        id: affected
        run: |
          AFFECTED=$(pnpm nx affected:apps --plain)
          echo "affected=$AFFECTED" >> $GITHUB_OUTPUT
          echo "affected-apps=$(echo $AFFECTED | tr ' ' ',')" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: affected
    if: needs.affected.outputs.affected != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.affected.outputs.affected-apps) }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build affected app
        run: pnpm nx build ${{ matrix.app }}

      - name: Configure AWS credentials
        if: matrix.app == 'crawler'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to EC2
        if: matrix.app == 'crawler'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app
            git pull origin main
            pnpm install
            pnpm nx build crawler
            pm2 reload ecosystem.config.js
