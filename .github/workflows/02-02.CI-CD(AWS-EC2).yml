name: CI-CD(AWS-EC2)

on:
  workflow_call:
    inputs:
      target:
        description: '배포할 앱 이름'
        required: true
        type: string

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # 추후 활성화
      # - name: Test
      #   run: pnpm test

  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm build:${{ inputs.target }}

      - name: Create deployment package
        run: |
          mkdir -p deploy-${{ inputs.target }}-package
          # 실행에 필요한 파일만 복사
          cp -r ./apps/${{ inputs.target }}/dist deploy-${{ inputs.target }}-package/
          cp ./apps/${{ inputs.target }}/ecosystem.config.js deploy-${{ inputs.target }}-package/
          cp ./apps/${{ inputs.target }}/appspec.yml deploy-${{ inputs.target }}-package/
          cp -r ./apps/${{ inputs.target }}/scripts deploy-${{ inputs.target }}-package/
          # logs 디렉토리 생성
          mkdir -p deploy-${{ inputs.target }}-package/logs
          cd deploy-${{ inputs.target }}-package
          zip -qq -r ../deploy-${{ inputs.target }}.zip .
          ls -l

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp deploy-${{ inputs.target }}.zip s3://neoavath-${{ inputs.target }}/deploy-${{ inputs.target }}.zip

      - name: Deploy
        run: |
          aws deploy create-deployment \
            --application-name neoavath \
            --deployment-group-name ${{ inputs.target }} \
            --s3-location bucket=neoavath-${{ inputs.target }},key=deploy-${{ inputs.target }}.zip,bundleType=zip
