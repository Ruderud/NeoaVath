name: CI-CD(AWS-EC2)

on:
  workflow_call:
    inputs:
      target:
        description: '배포할 앱 이름'
        required: true
        type: string

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # 추후 활성화
      # - name: Test
      #   run: pnpm test

  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm build:${{ inputs.target }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Stop existing deployment
        run: |
          # 실행 중인 배포 목록 조회
          DEPLOYMENTS=$(aws deploy list-deployments \
            --application-name neoavath \
            --deployment-group-name ${{ inputs.target }} \
            --include-only-statuses InProgress \
            --query 'deployments[0]' \
            --output text)

          # 실행 중인 배포가 있으면 중지
          if [ "$DEPLOYMENTS" != "None" ]; then
            echo "실행 중인 배포를 중지합니다: $DEPLOYMENTS"
            aws deploy stop-deployment \
              --deployment-id $DEPLOYMENTS

            # 배포가 완전히 중지될 때까지 대기
            while true; do
              STATUS=$(aws deploy get-deployment \
                --deployment-id $DEPLOYMENTS \
                --query 'deploymentInfo.status' \
                --output text)

              if [ "$STATUS" = "Stopped" ]; then
                echo "배포가 중지되었습니다."
                break
              elif [ "$STATUS" = "Failed" ]; then
                echo "배포 중지 중 오류가 발생했습니다."
                break
              fi

              echo "배포 중지 대기 중... (현재 상태: $STATUS)"
              sleep 10
            done
          fi

      - name: Deploy
        run: |
          aws deploy create-deployment \
            --application-name neoavath \
            --deployment-group-name ${{ inputs.target }} \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
